# TODO: automate this

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lokistack-secret-job
  namespace: {{ .Values.netobserv.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lokistack-secret-job
  annotations:
    argocd.argoproj.io/sync-wave: "2"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: lokistack-secret-job
  namespace: {{ .Values.netobserv.namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: lokistack-secret-job
  namespace: {{ .Values.netobserv.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: lokistack-secret-job
      containers:
      - name: lokistack-secret-patch
        image: quay.io/agnosticd/ee-multicloud:v0.1.2
        command:
        - /bin/sh
        - -c
        - |

          BUCKET_HOST=$(oc get -n netobserv configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_HOST}')
          BUCKET_NAME=$(oc get -n netobserv configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_NAME}')
          BUCKET_PORT=$(oc get -n netobserv configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_PORT}')

          ACCESS_KEY_ID=$(oc get -n netobserv secret loki-bucket-odf -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d)
          SECRET_ACCESS_KEY=$(oc get -n netobserv secret loki-bucket-odf -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 -d)

          oc create -n netobserv secret generic loki-s3 \
          --from-literal=access_key_id="${ACCESS_KEY_ID}" \
          --from-literal=access_key_secret="${SECRET_ACCESS_KEY}" \
          --from-literal=bucketnames="${BUCKET_NAME}" \
          --from-literal=endpoint="https://${BUCKET_HOST}:${BUCKET_PORT}"

#
# kind: ConfigMap
# apiVersion: v1
# metadata:
#   resourceVersion: '705516'
#   name: loki-bucket-odf
#   namespace: netobserv
#   labels:
#     app: noobaa
#     bucket-provisioner: openshift-storage.noobaa.io-obc
#     noobaa-domain: openshift-storage.noobaa.io
# data:
#   BUCKET_HOST: s3.openshift-storage.svc
#   BUCKET_NAME: loki-bucket-odf-a77cb3c3-2358-4a35-91c5-e33f504775ea
#   BUCKET_PORT: '443'
#   BUCKET_REGION: ''
#   BUCKET_SUBREGION: ''
# ---
# kind: Secret
# apiVersion: v1
# metadata:
#   name: loki-bucket-odf
#   namespace: netobserv
#   labels:
#     app: noobaa
#     bucket-provisioner: openshift-storage.noobaa.io-obc
#     noobaa-domain: openshift-storage.noobaa.io
# data:
#   AWS_ACCESS_KEY_ID: ZWhwVHNMYUg1SWpmWFRxa2FsekM=
#   AWS_SECRET_ACCESS_KEY: aXd3c2J6UitDOWdSRmJ1L3BjSU5MY1VLbldKUlJxcVMvbXBCYVZlUg==
# type: Opaque
# --- GENERATE THIS
# apiVersion: v1
# kind: Secret
# metadata:
#   name: loki-s3
#   namespace: netobserv
# stringData:
#   access_key_id: QUtJQUlPU0ZPRE5ON0VYQU1QTEUK
#   access_key_secret: d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQo=
#   bucketnames: s3-bucket-name
#   endpoint: https://s3.eu-central-1.amazonaws.com
#   region: eu-central-1
#
##!/bin/bash
#
# BUCKET_HOST=$(oc get -n netobserv configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_HOST}')
# BUCKET_NAME=$(oc get -n netobserv configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_NAME}')
# BUCKET_PORT=$(oc get -n netobserv configmap loki-bucket-odf -o jsonpath='{.data.BUCKET_PORT}')
#
# ACCESS_KEY_ID=$(oc get -n netobserv secret loki-bucket-odf -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d)
# SECRET_ACCESS_KEY=$(oc get -n netobserv secret loki-bucket-odf -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 -d)
#
# oc create -n netobserv secret generic loki-s3 \
# --from-literal=access_key_id="${ACCESS_KEY_ID}" \
# --from-literal=access_key_secret="${SECRET_ACCESS_KEY}" \
# --from-literal=bucketnames="${BUCKET_NAME}" \
# --from-literal=endpoint="https://${BUCKET_HOST}:${BUCKET_PORT}"
#
