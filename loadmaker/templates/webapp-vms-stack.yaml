{{- with .Values.new_vms.webappVms }}
---
apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: {{ .namespace }}
spec:
  selector:
    vm.kubevirt.io/name: database
  ports:
  - protocol: TCP
    name: mysql
    port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: webapp
  namespace: {{ .namespace }}
spec:
  selector:
    env: webapp
  ports:
  - protocol: TCP
    name: http
    port: 80
    targetPort: 80
{{- if .create_route }}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ .route }}
  namespace: {{ .namespace }}
  annotations:
    haproxy.router.openshift.io/disable_cookies: "true"
spec:
  host: {{ .route }}-{{ .namespace }}.{{ $.Values.deployer.domain }}
  path: /
  to:
    kind: Service
    name: {{ .route }}
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
{{- end }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: loadmaker
  namespace: {{ .namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loadtest
  template:
    metadata:
      labels:
        app: loadtest
    spec:
      containers:
        - name: container
          image: quay.io/rhpds/loadtest
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: REQUESTS_PER_SECOND
              value: '{{ .loadtest.requests_per_second }}'
            - name: DURATION
              value: '10000'
            - name: URL
              # value: 'http://istio-ingressgateway-istio-system.apps.virt-cluster.vew1.p1.openshiftapps.com'
              value: 'https://{{ .route }}-{{ .namespace }}.{{ $.Values.deployer.domain }}'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
{{- end }}
